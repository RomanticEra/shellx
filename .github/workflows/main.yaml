name: build
on:
  pull_request:
    paths:
      - ".github/workflows/main.yaml"
      - "lib/**"
      - "test/**"
      - "pubspec.yaml"
  push:
    branches:
      - main
    paths:
      - ".github/workflows/main.yaml"
      - "lib/**"
      - "test/**"
      - "pubspec.yaml"

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # - uses: subosito/flutter-action@v1.5.3
      - uses: dart-lang/setup-dart@v1

      - name: Install Dependencies
        run: |
          pub get
          dart pub global activate test_coverage

      - name: Format
        run: dart format --set-exit-if-changed lib

      - name: Analyze
        run: dart analyze --fatal-infos --fatal-warnings .

      - name: Ensure Build
        run: dart test

      - name: Check Code Coverage
        # uses: VeryGoodOpenSource/very_good_coverage@v1.1.1
        run: test_coverage
  build:
    needs: setup

    runs-on: ${{matrix.os}}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: dart-lang/setup-dart@v1

      - name: Install Dependencies
        run: |
          dart pub get
          dart pub global activate coverage

      - name: Run Tests
        run: dart test -j 1 -x pull-request-only --coverage=coverage && dart run coverage:format_coverage --lcov --in=coverage --out=coverage/lcov.info --packages=.packages --report-on=lib
  pana:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.3.4
      - uses: dart-lang/setup-dart@v1

      - name: Install Dependencies
        run: |
          dart pub get
          dart pub global activate pana

      - name: Verify Pub Score
        run: |
          PANA=$(pana . --no-warning); PANA_SCORE=$(echo $PANA | sed -n "s/.*Points: \([0-9]*\)\/\([0-9]*\)./\1\/\2/p")
          echo "score: $PANA_SCORE"
          IFS='/'; read -a SCORE_ARR <<< "$PANA_SCORE"; SCORE=SCORE_ARR[0]; TOTAL=SCORE_ARR[1]
          if (( $SCORE < $TOTAL )); then echo "minimum score not met!"; exit 1; fi
  publish:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Publish
        uses: sakebook/actions-flutter-pub-publisher@v1.3.1
        with:
          credential: ${{secrets.CREDENTIAL_JSON}}
          flutter_package: false
          skip_test: true
          # dry_run: true